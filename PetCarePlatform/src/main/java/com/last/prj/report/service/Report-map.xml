<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.last.prj.report.service.ReportMapper">

	<!-- qna 신고 접수 -->
	<insert id="newQnaReport"
		parameterType="com.last.prj.report.service.ReportVO">
		INSERT INTO REPORT (rep_no, reporter, w_date, content,
		q_no, reported, code)
		VALUES (r_seq.nextval, #{reporter}, sysdate,
		#{content}, #{q_no},
		#{reported}, #{code})
	</insert>


	<!-- 신고 유형 별 리스트 -->
	<select id="reportPartlist">
		SELECT * FROM REPORT
	</select>



	<!-- 신고전체 리스트 -->
	<select id="reportList" resultType="com.last.prj.report.service.ReportVO">
		SELECT R.REP_NO, R.REPORTER, R.REPORTED, R.W_DATE, R.CONTENT, F.CONTENT AS F_CONTENT, r.rev_no, r.q_no
				FROM REPORT R,F_CODE F
			WHERE R.CODE = F.CODE
		ORDER BY R.REP_NO
	</select>

	<!-- 신고 전체 건수 -->
	<select id="reportCount" resultType="int">
		SELECT COUNT(*) FROM REPORT
	</select>


	<!-- review 신고 리스트 -->
	<select id="admReviewList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.REPORTER,
		R.REPORTED,RE.REV_NO,R.REP_NO,R.REPOR, R.W_DATE, R.CONTENT
		FROM REPORT
		R, F_CODE F, REVIEW RE
		WHERE R.CODE = F.CODE AND R.REV_NO = RE.REV_NO
	</select>

	<!-- qna 신고 리스트 -->
	<select id="admQnaList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.CONTENT, R.REPORTER,
		R.REPORTED, Q.Q_NO,R.W_DATE,R.REP_NO,R.REPOR
		FROM REPORT R, F_CODE F,
		QNA Q
		WHERE R.CODE = F.CODE AND R.Q_NO = Q.Q_NO

	</select>

	<!-- 신고 모달로 단건 조회 QnA -->
	<select id="admReportOneQna" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.REPORTER , R.REPORTED,
		R.REP_NO, R.W_DATE, R.REPOR, R.Q_NO,Q.CONTENT AS Q_CONTENT, R.CONTENT,
		R.STATE
		FROM REPORT R, F_CODE F, QNA Q
		WHERE R.CODE = F.CODE AND Q.Q_NO
		= R.Q_NO AND R.REP_NO = #{repno}
	</select>

	<!-- 신고 모달로 단건 조회 Review -->
	<select id="admReportOneReview" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.REPORTER , R.REPORTED ,
		R.REP_NO , R.W_DATE, R.REPOR, R.REV_NO, REV.CONTENT AS REV_CONTENT,
		R.CONTENT, R.STATE
		FROM REPORT R, F_CODE F, REVIEW REV
		WHERE R.CODE =
		F.CODE AND REV.REV_NO = R.REV_NO AND R.REP_NO = #{rep_no}
	</select>

	<!-- 신고 처리 -->
	<update id="admReportUpdate">
		UPDATE REPORT
		SET STATE = #{state}, REPOR = #{repor}, WR_DATE = SYSDATE
		WHERE REP_NO = #{rep_no}
	</update>


	<!-- 신고 유형에 따른 신고 및 건수 -->
	<select id="reportPartCount" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT R.CODE AS CODE, F.CONTENT AS CONTENT, COUNT(F.CODE)
		AS COUNT
		FROM F_CODE F, REPORT R
		WHERE R.CODE=F.CODE AND F.CODE = {code}
		GROUP BY F.CODE,F.CONTENT,R.CODE
	</select>

	<!-- 일반회원 신고내역 전체조회 -->
	<select id="myReportList" 
		resultType="com.last.prj.report.service.ReportVO">
		SELECT * 
			FROM( SELECT ROWNUM RN, A.* 
				FROM (SELECT P.NAME AS p_name , R.CONTENT, R.W_DATE, R.STATE, R.REPOR,R.CODE, R.REP_NO
						FROM REPORT R, F_CODE C, P_MEMBER P
					WHERE R.CODE=C.CODE AND R.REPORTED=P.P_ID AND REPORTER = #{reporter}

		union

		SELECT m.NAME AS p_name , R.CONTENT, R.W_DATE, R.STATE, R.REPOR, R.CODE, R.REP_NO
			FROM REPORT R, F_CODE C, member m
		WHERE R.CODE=C.CODE AND R.REPORTED=m.m_ID AND REPORTER = #{reporter}) A)
			WHERE RN BETWEEN
			(#{pageNum}-1)*#{amount}+1
			AND (#{pageNum})*#{amount}
	</select>

	<!-- 신고 날짜 별 검색 -->
	<select id="admReportDate" parameterType="String"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT R.REPORTER, R.REPORTED,R.W_DATE, R.CONTENT,
		F.CONTENT as f_content, R.REPOR
		FROM REPORT R , F_CODE F
		WHERE
		F.CODE=R.CODE AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
	</select>
	
	<select id = "memReport" resultType="int" parameterType="com.last.prj.report.service.ReportVO">
		select count(*)
		from report
		where reporter = #{reporter}
	</select>


	<!-- 파트너마이페이지 신고내역 -->
	<select id="pmemReport" resultType="int"
		parameterType="com.last.prj.report.service.ReportVO">
		SELECT COUNT(*) AS TOTAL
		FROM REPORT
		WHERE REPORTER = #{reporter}
	</select>

	<select id="pmemReportList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT *
		FROM ( SELECT ROWNUM RN, A.*
				FROM (SELECT REP_NO, W_DATE , CONTENT, REPORTED, CODE, REPOR, STATE
						FROM REPORT
				WHERE REPORTER = #{reporter} ) A)
		WHERE RN BETWEEN
		(#{pageNum}-1)*#{amount}+1
		AND (#{pageNum})*#{amount}
	</select>


	<!--관리자 리뷰 리스트 페이징 처리된 유형 별 조회 -->
	<select id="admRlistCode"
		parameterType="com.last.prj.report.service.ReportVO"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT B.* FROM ( SELECT A.* , ROWNUM RN FROM (SELECT F.CONTENT AS
		F_CONTENT, RE.CONTENT AS REV_CONTENT, R.REPORTER,
		R.REPORTED,RE.REV_NO,R.REP_NO,R.REPOR, R.W_DATE, R.CONTENT
		FROM REPORT
		R, F_CODE F, REVIEW RE
		WHERE R.CODE = F.CODE AND R.REV_NO = RE.REV_NO
		<if test="code != null ">
			AND R.CODE = #{code}
		</if>
		<if test="key != null and key != '' and data != null and data != ''">
			AND UPPER(R.REPORTER) LIKE '%'|| UPPER(#{data})||'%' OR UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
			<if test="key != null and key != '' and key == 'reporter' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data})||'%' </if>
			<if test="key != null and key != '' and key == 'reported' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
		<if
			test="fromDate != null and fromDate != '' and toDate != null and toDate !='' ">
			AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
		</if>
		ORDER BY R.REV_NO ASC
<![CDATA[ 
        ) A)B WHERE RN BETWEEN (#{vo.pageNum}-1)*#{vo.amount}+1 AND (#{vo.pageNum})*#{vo.amount}
        ]]>
	</select>
	<select id="admRlistCodeCount"
		parameterType="com.last.prj.report.service.ReportVO" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW RE, REPORT R
		WHERE RE.REV_NO = R.REV_NO
		<if test="code != null">
			AND R.CODE = #{code}
		</if>
		<if test="key != null and key != '' and data != null and data != ''">
			AND UPPER(R.REPORTER) LIKE '%'|| UPPER(#{data})||'%' OR UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
			<if test="key != null and key != '' and key == 'reporter' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data})||'%' </if>
			<if test="key != null and key != '' and key == 'reported' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
		<if
			test="fromDate != null and fromDate != '' and toDate != null and toDate !='' ">
			AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
		</if>

	</select>

	<!--관리자 리뷰 QnA 페이징 처리된 유형 별 조회 -->
	<select id="admQlistCode"
		parameterType="com.last.prj.report.service.ReportVO"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT B.* FROM ( SELECT A.* , ROWNUM RN FROM (SELECT F.CONTENT AS
		F_CONTENT, Q.CONTENT AS Q_CONTENT, R.REPORTER,
		R.REPORTED,Q.Q_NO,R.REP_NO,R.REPOR, R.W_DATE, R.CONTENT
		FROM REPORT
		R,
		F_CODE F, QNA Q
		WHERE R.CODE = F.CODE AND R.Q_NO = Q.Q_NO
		<if test="code != null ">
			AND R.CODE = #{code}
		</if>
		<if test="repor != null ">
			AND R.REPOR = #{repor}
		</if>
		<if test="key != null and key != '' and data != null and data != ''">
			AND UPPER(R.REPORTER) LIKE '%'|| UPPER(#{data})||'%' OR UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
			<if test="key != null and key != '' and key == 'reporter' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data})||'%' </if>
			<if test="key != null and key != '' and key == 'reported' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
		<if
			test="fromDate != null and fromDate != '' and toDate != null and toDate !='' ">
			AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
		</if>
		ORDER BY R.Q_NO ASC
<![CDATA[ 
        ) A)B WHERE RN BETWEEN (#{vo.pageNum}-1)*#{vo.amount}+1 AND (#{vo.pageNum})*#{vo.amount}
        ]]>
	</select>
	<select id="admQlistCodeCount"
		parameterType="com.last.prj.report.service.ReportVO" resultType="int">
		SELECT COUNT(*)
		FROM QNA Q, REPORT R
		WHERE Q.Q_NO = R.Q_NO
		<if test="code != null ">
			AND R.CODE = #{code}
		</if>
		<if test="repor != null ">
			AND R.REPOR = #{repor}
		</if>
		<if test="key != null and key != '' and data != null and data != ''">
			AND UPPER(R.REPORTER) LIKE '%'|| UPPER(#{data})||'%' OR UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
			<if test="key != null and key != '' and key == 'reporter' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data})||'%' </if>
			<if test="key != null and key != '' and key == 'reported' and data != null and data != ''">
			AND UPPER(R.REPORTED) LIKE '%'|| UPPER(#{data}) ||'%'</if>
		<if
			test="fromDate != null and fromDate != '' and toDate != null and toDate !='' ">
			AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
		</if>
	</select>


	<!-- 리서치 업데이트를 위한 -->
	<select id="admReSearch" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT M.M_ID AS ID, M.M_ROLE AS ROLE, M.C_REPORT, R.REP_NO
		FROM MEMBER M , REPORT R
		WHERE M.M_ROLE = 1 AND M.M_ID = R.REPORTED AND
		R.REP_NO = #{rep_no}
		UNION
		SELECT P.P_ID AS ID, P.P_ROLE AS ROLE,
		P.C_REPORT, R.REP_NO
		FROM P_MEMBER P , REPORT R
		WHERE P.P_ROLE = 2 AND
		P.P_ID = R.REPORTED AND R.REP_NO = #{rep_no}
	</select>

	<!-- 신고건수 업데이트 -->
	<update id="admReSearchUpdate"
		parameterType="com.last.prj.report.service.ReportVO">
		<choose>
			<when test='role == "1"'>
				UPDATE MEMBER
				<set> C_REPORT = C_REPORT+1 </set>
				WHERE M_ID = #{id}
			</when>
			<when test='role == "2"'>
				UPDATE P_MEMBER
				<set> C_REPORT = C_REPORT+1 </set>
				WHERE P_ID = #{id}
			</when>
		</choose>
	</update>
	
	<!-- adminReportTotalCount 일반,파트너회원  -->
	<select id="adminReportedCount" resultType="int">
		SELECT COUNT(*) FROM REPORT WHERE REPOR = 703
	</select>
	
	<select id="adminReportTotalCount" resultType="int">
		SELECT COUNT(*) FROM REPORT
	</select>
	
	<select id="adminReporCount" resultType="int">
		SELECT COUNT(*) FROM(
		SELECT M_ID AS ID FROM MEMBER WHERE C_REPORT >= 10
		UNION
		SELECT P_ID AS ID FROM P_MEMBER WHERE C_REPORT >= 10)
	</select>
	
	<!-- 신고 제재 대상 회원 -->
	<select id="adminReporList" resultType="com.last.prj.report.service.ReportVO">
	SELECT B.* FROM ( SELECT A.* , ROWNUM RN FROM (
	SELECT   M.M_ID AS ID, M.M_ROLE AS ROLE, M.C_REPORT, M.NAME, M.STARTDATE
		FROM MEMBER M 
		WHERE M.M_ROLE = 1 AND m.c_report >= 10
		UNION
		SELECT  P.P_ID AS ID, P.P_ROLE AS ROLE,
		P.C_REPORT , P.NAME , P.STARTDATE
		FROM P_MEMBER P
		WHERE P.P_ROLE = 2 AND p.c_report >= 10
		<![CDATA[ 
        ) A)B WHERE RN BETWEEN (#{vo.pageNum}-1)*#{vo.amount}+1 AND (#{vo.pageNum})*#{vo.amount}
        ]]>
	</select>
	<!-- 신고 제재 중인 회원 -->
	<select id="adminReporListCount" resultType="int">
		SELECT COUNT(*) FROM(
		SELECT   M.M_ID AS ID, M.M_ROLE AS ROLE, M.C_REPORT, M.NAME, M.STARTDATE
		FROM MEMBER M 
		WHERE M.M_ROLE = 1 AND m.c_report >= 10
		UNION
		SELECT  P.P_ID AS ID, P.P_ROLE AS ROLE,
		P.C_REPORT , P.NAME , P.STARTDATE
		FROM P_MEMBER P
		WHERE P.P_ROLE = 2 AND p.c_report >= 10)
	</select>
	
	<select id="adminReporOneList" parameterType="com.last.prj.report.service.ReportVO" resultType="com.last.prj.report.service.ReportVO">
		SELECT B.* FROM ( SELECT A.* , ROWNUM RN FROM (
		 SELECT    M.M_ROLE AS ROLE,R.W_DATE, R.WR_DATE ,R.Q_NO, f.content as f_content , r.state
		FROM MEMBER M , Report r , f_code f
		WHERE M.M_ROLE = 1 AND R.REPORTED = m.m_id AND f.code = r.code AND R.REPOR = 703
		<if test="id != '' and id != null">
		AND R.REPORTED = #{id}
		</if>
		UNION ALL
		SELECT   P.P_ROLE AS ROLE ,R.W_DATE, R.WR_DATE,R.Q_NO, f.content as f_content, r.state
		FROM P_MEMBER P, Report r, f_code f
		WHERE P.P_ROLE = 2 AND R.REPORTED = p.p_id AND f.code = r.code AND R.REPOR = 703
		<if test="id != '' and id != null">
		AND R.REPORTED = #{id}
		</if>
		<![CDATA[ 
        ) A)B WHERE RN BETWEEN (#{vo.pageNum}-1)*#{vo.amount}+1 AND (#{vo.pageNum})*#{vo.amount}
        ]]>
		
	</select>
	<select id="adminReporOneListCount" parameterType="com.last.prj.report.service.ReportVO" resultType="int">
	SELECT COUNT(*) FROM(
		 SELECT    M.M_ROLE AS ROLE,R.W_DATE, R.WR_DATE ,R.Q_NO, f.content as f_content , r.state
		FROM MEMBER M , Report r , f_code f
		WHERE M.M_ROLE = 1 AND R.REPORTED = m.m_id AND f.code = r.code AND R.REPOR = 703
		<if test="id != '' and id != null">
		AND R.REPORTED = #{id}
		</if>
		UNION ALL
		SELECT   P.P_ROLE AS ROLE ,R.W_DATE, R.WR_DATE,R.Q_NO, f.content as f_content, r.state
		FROM P_MEMBER P, Report r, f_code f
		WHERE P.P_ROLE = 2 AND R.REPORTED = p.p_id AND f.code = r.code AND R.REPOR = 703
		<if test="id != '' and id != null">
		AND R.REPORTED = #{id}
		</if>)
	</select>
	
	<select id="adminDeletResearch" parameterType="com.last.prj.report.service.ReportVO" resultType="com.last.prj.report.service.ReportVO">
		SELECT M.M_ID AS ID, M.M_ROLE AS ROLE
		FROM MEMBER M 
		WHERE M.M_ROLE = 1 AND m.m_id = #{id}
		UNION
		SELECT P.P_ID AS ID, P.P_ROLE AS ROLE,
		FROM P_MEMBER P 
		WHERE P.P_ROLE = 2 AND p.p_id = #{id}
	</select>
	
	
</mapper>